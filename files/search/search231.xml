Python Programming:@0.676785:0.958597:0.830609:0.958597:0.830609:0.941370:0.676785:0.941370:0.010924:0.008189:0.004553:0.009106:0.009106:0.009106:0.004553:0.010924:0.005454:0.009106:0.009106:0.005454:0.009106:0.013643:0.013643:0.003636:0.009106:0.009106
229:@0.866633:0.958672:0.893116:0.958672:0.893116:0.942265:0.866633:0.942265:0.008828:0.008828:0.008828
Before using the KNN classifier, you need to first import the KNeighborsClassifier by using the following code::@0.086528:0.058693:0.877218:0.058693:0.877218:0.042286:0.086528:0.042286:0.009385:0.008566:0.005126:0.009598:0.005480:0.008566:0.004488:0.009270:0.006944:0.003964:0.009270:0.009647:0.004488:0.005552:0.009270:0.008566:0.004488:0.009499:0.012251:0.012251:0.004488:0.007567:0.003964:0.008336:0.006944:0.006944:0.003964:0.005126:0.003964:0.008566:0.004440:0.003554:0.004488:0.007840:0.009598:0.009270:0.004488:0.009270:0.008566:0.008566:0.009647:0.004488:0.005413:0.009598:0.004488:0.005126:0.003964:0.005806:0.006944:0.005552:0.004488:0.003964:0.014102:0.009630:0.009598:0.006173:0.005552:0.004488:0.005552:0.009270:0.008566:0.004488:0.009499:0.012251:0.008566:0.003964:0.009647:0.009270:0.009630:0.009598:0.005795:0.006944:0.010138:0.003964:0.008336:0.006944:0.006944:0.003964:0.005126:0.003964:0.008566:0.005700:0.004488:0.009630:0.007927:0.004488:0.009270:0.006944:0.003964:0.009270:0.009647:0.004488:0.005552:0.009270:0.008566:0.004488:0.005126:0.009598:0.003964:0.003964:0.009598:0.011841:0.003964:0.009270:0.009647:0.004488:0.007567:0.009598:0.009647:0.008566:0.003554
from sklearn.neighbors import KNeighborsClassifier:@0.268293:0.084731:0.759638:0.084731:0.759638:0.070452:0.268293:0.070452:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827:0.009827
Let us now add a KNN classifier. :@0.086528:0.103698:0.319914:0.103698:0.319914:0.087291:0.086528:0.087291:0.007714:0.008566:0.005552:0.004488:0.009270:0.006944:0.004488:0.009270:0.009598:0.011841:0.004488:0.008336:0.009647:0.009647:0.004488:0.008336:0.004488:0.009499:0.012251:0.012251:0.004488:0.007567:0.003964:0.008336:0.006944:0.006944:0.003964:0.005126:0.003964:0.008566:0.004321:0.003554:0.004488
Program 62: To add a KNN classifier:@0.100450:0.133357:0.377078:0.133357:0.377078:0.116710:0.100450:0.116710:0.010056:0.006458:0.010007:0.010138:0.006519:0.008811:0.015002:0.004520:0.009417:0.009417:0.004438:0.004520:0.008137:0.010007:0.004520:0.008811:0.010138:0.010138:0.004520:0.008811:0.004520:0.010629:0.012939:0.012939:0.004520:0.007862:0.004651:0.008811:0.007206:0.007206:0.004651:0.006273:0.004651:0.008861:0.006519
# Import necessary libraries:@0.124198:0.162980:0.403773:0.162980:0.403773:0.148701:0.124198:0.148701:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009827
from sklearn.datasets import load_iris:@0.124198:0.185483:0.503680:0.185483:0.503680:0.171204:0.124198:0.171204:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009827
from sklearn.model_selection import train_test_split:@0.124198:0.207986:0.643549:0.207986:0.643549:0.193707:0.124198:0.193707:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009827
from sklearn.neighbors import KNeighborsClassifier:@0.124198:0.230489:0.623568:0.230489:0.623568:0.216210:0.124198:0.216210:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009827
# Load the iris dataset:@0.124198:0.260148:0.353820:0.260148:0.353820:0.245869:0.124198:0.245869:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009827
iris = load_iris():@0.124198:0.282651:0.303866:0.282651:0.303866:0.268372:0.124198:0.268372:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009827
X = iris.data  # Features:@0.124198:0.305204:0.373800:0.305204:0.373800:0.290925:0.124198:0.290925:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009989:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009827
y = iris.target  # Target labels:@0.124198:0.327712:0.443734:0.327712:0.443734:0.313433:0.124198:0.313433:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009989:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009827
# Split the data into training and testing sets:@0.124198:0.357376:0.593596:0.357376:0.593596:0.343097:0.124198:0.343097:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009827
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_:@0.124198:0.379879:0.941369:0.379879:0.941369:0.365600:0.124198:0.365600:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.012251:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.012251:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.012251:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.012251:0.009991:0.012251:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.012251:0.009991:0.009991:0.012251:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.012251:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009827
state=1):@0.124198:0.398810:0.203960:0.398810:0.203960:0.384531:0.124198:0.384531:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009827
# Create a KNN classifier with 3 neighbors:@0.124198:0.428469:0.543642:0.428469:0.543642:0.414190:0.124198:0.414190:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009827
knn = KNeighborsClassifier(n_neighbors=3):@0.124198:0.450972:0.533652:0.450972:0.533652:0.436693:0.124198:0.436693:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009827
# Train the KNN classifier on the training data:@0.124198:0.480631:0.593596:0.480631:0.593596:0.466352:0.124198:0.466352:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009827
knn.fit(X_train, y_train):@0.124198:0.503134:0.373801:0.503134:0.373801:0.488855:0.124198:0.488855:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009827
# Use the trained classifier to make predictions on the test data:@0.124198:0.532793:0.773428:0.532793:0.773428:0.518514:0.124198:0.518514:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009827
y_pred = knn.predict(X_test):@0.124198:0.555296:0.403773:0.555296:0.403773:0.541017:0.124198:0.541017:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009991:0.009827
Evaluating Metrics:@0.086528:0.587328:0.257536:0.587328:0.257536:0.570569:0.086528:0.570569:0.010456:0.010652:0.010574:0.005582:0.011891:0.010574:0.007645:0.005582:0.011891:0.012166:0.005424:0.018809:0.010633:0.007645:0.007822:0.005582:0.009434:0.008648
When working  with  machine learning models, evaluating their  performance using appropriate metrics is crucial  to :@0.086528:0.606704:0.945962:0.606704:0.945962:0.590297:0.086528:0.590297:0.015297:0.009270:0.008566:0.009270:0.007124:0.011789:0.009598:0.005700:0.008140:0.003964:0.009270:0.009647:0.004488:0.002629:0.011841:0.003964:0.005552:0.009270:0.004488:0.002629:0.014102:0.008336:0.007567:0.009270:0.003964:0.009270:0.008566:0.007124:0.003964:0.008566:0.008336:0.005660:0.009270:0.003964:0.009270:0.009647:0.007124:0.014102:0.009598:0.009647:0.008566:0.003964:0.006944:0.003554:0.007124:0.008566:0.007549:0.008336:0.003964:0.009270:0.008336:0.005552:0.003964:0.009270:0.009639:0.007124:0.005552:0.009270:0.008566:0.003964:0.005700:0.004488:0.002629:0.009630:0.008566:0.006003:0.005126:0.009598:0.005660:0.014102:0.008336:0.009270:0.007567:0.008566:0.007124:0.009270:0.006944:0.003964:0.009270:0.009647:0.007124:0.008336:0.009630:0.009630:0.005470:0.009598:0.009630:0.005700:0.003964:0.008336:0.005413:0.008566:0.007124:0.014102:0.008566:0.005552:0.005700:0.003964:0.007567:0.006944:0.007124:0.003964:0.006944:0.007124:0.007567:0.005700:0.009270:0.007567:0.003964:0.008336:0.003964:0.004488:0.002629:0.005421:0.009598:0.004488
understand how well the model is performing and to make informed decisions about its effectiveness. Metrics evaluate :@0.086528:0.625635:0.945924:0.625635:0.945924:0.609228:0.086528:0.609228:0.009270:0.009270:0.009647:0.008566:0.005800:0.006944:0.005552:0.008336:0.009270:0.009647:0.004406:0.009270:0.009598:0.011841:0.004406:0.011756:0.008566:0.003964:0.003964:0.004406:0.005552:0.009270:0.008566:0.004406:0.014102:0.009598:0.009647:0.008566:0.003964:0.004406:0.003964:0.006944:0.004419:0.009630:0.008566:0.006003:0.005126:0.009598:0.005660:0.014102:0.003964:0.009270:0.009647:0.004406:0.008336:0.009270:0.009647:0.004406:0.005421:0.009598:0.004406:0.014102:0.008336:0.007816:0.008566:0.004406:0.003964:0.009270:0.005126:0.009598:0.005662:0.014102:0.008566:0.009647:0.004406:0.009647:0.008566:0.007567:0.003964:0.006944:0.003964:0.009598:0.009270:0.006944:0.004419:0.008336:0.009630:0.009598:0.009270:0.005552:0.004406:0.003964:0.005552:0.006944:0.004406:0.008566:0.005126:0.005126:0.008566:0.007567:0.005552:0.003964:0.007747:0.008566:0.009270:0.008566:0.006944:0.006944:0.003554:0.004406:0.014708:0.008566:0.005552:0.005700:0.003964:0.007567:0.006944:0.004406:0.008566:0.007549:0.008336:0.003964:0.009270:0.008336:0.005416:0.008566:0.004488
how well the model makes predictions, allowing us to better understand its usefulness and identify areas for improvement. :@0.086528:0.644566:0.945978:0.644566:0.945978:0.628159:0.086528:0.628159:0.009270:0.009598:0.011841:0.002851:0.011756:0.008566:0.003964:0.003964:0.002866:0.005552:0.009270:0.008566:0.002855:0.014102:0.009598:0.009647:0.008566:0.003964:0.002866:0.014102:0.008336:0.007816:0.008566:0.006944:0.002866:0.009630:0.005477:0.008566:0.009647:0.003964:0.007567:0.005552:0.003964:0.009598:0.009270:0.006944:0.003554:0.002866:0.008336:0.003964:0.003964:0.009598:0.011841:0.003964:0.009270:0.009647:0.002855:0.009270:0.006944:0.002866:0.005423:0.009598:0.002858:0.009630:0.008566:0.005552:0.005418:0.008566:0.005700:0.002853:0.009270:0.009270:0.009647:0.008566:0.005800:0.006944:0.005552:0.008336:0.009270:0.009647:0.002856:0.003964:0.005552:0.006944:0.002866:0.009270:0.006944:0.008566:0.005126:0.009270:0.003964:0.009270:0.008566:0.006944:0.006944:0.002866:0.008336:0.009270:0.009647:0.002853:0.003964:0.009647:0.008566:0.009270:0.005552:0.003964:0.005390:0.007927:0.002856:0.008336:0.005475:0.008566:0.008336:0.006944:0.002866:0.005126:0.009598:0.005700:0.002853:0.003964:0.014102:0.009630:0.005485:0.009598:0.007749:0.008566:0.014102:0.008566:0.009270:0.005552:0.003554:0.004488
Some important uses of metrics are as follows: :@0.086528:0.667069:0.426362:0.667069:0.426362:0.650662:0.086528:0.650662:0.008697:0.009598:0.014102:0.008566:0.004488:0.003964:0.014102:0.009630:0.009598:0.006178:0.005552:0.008336:0.009270:0.005552:0.004488:0.009270:0.006944:0.008566:0.006944:0.004488:0.009298:0.005126:0.004488:0.014102:0.008566:0.005552:0.005700:0.003964:0.007567:0.006944:0.004488:0.008336:0.005475:0.008566:0.004488:0.008336:0.006944:0.004488:0.005126:0.009598:0.003964:0.003964:0.009598:0.011841:0.006944:0.003554:0.004488
• •:@0.094062:0.689181:0.094062:0.689181:0.094062:0.673720:0.094062:0.673720:0.004095:-0.011628:0.007534
  Model evaluation::@0.119285:0.689584:0.257872:0.689584:0.257872:0.672937:0.119285:0.672937:0.004520:-0.004520:0.015674:0.010007:0.010138:0.008861:0.004651:0.004206:0.008861:0.008630:0.008811:0.004651:0.009909:0.008811:0.006371:0.004651:0.010007:0.009909:0.004438
 Metrics assist in determining how well a model works on a specific dataset. Accuracy, precision, :@0.257888:0.689584:0.945950:0.689584:0.945950:0.673177:0.257888:0.673177:0.004165:0.014708:0.008566:0.005552:0.005700:0.003964:0.007567:0.006944:0.004163:0.008336:0.006944:0.006944:0.003964:0.006944:0.005552:0.004176:0.003964:0.009270:0.004168:0.009647:0.008566:0.005418:0.008566:0.005662:0.014102:0.003964:0.009270:0.003964:0.009270:0.009647:0.004172:0.009270:0.009598:0.011841:0.004158:0.011755:0.008566:0.003964:0.003964:0.004172:0.008336:0.004162:0.014102:0.009598:0.009647:0.008566:0.003964:0.004170:0.011787:0.009598:0.005700:0.008140:0.006944:0.004165:0.009598:0.009270:0.004163:0.008336:0.004162:0.006944:0.009630:0.008566:0.007567:0.003964:0.004545:0.004545:0.007567:0.004163:0.009647:0.008336:0.005552:0.008336:0.006944:0.008566:0.005552:0.003554:0.004153:0.010564:0.007567:0.007567:0.009270:0.005700:0.008336:0.007567:0.007095:0.003554:0.004162:0.009630:0.005477:0.008566:0.007567:0.003964:0.006944:0.003964:0.009598:0.009270:0.003554:0.004488
recall, F1-score, and AUC-ROC are some of the most commonly used evaluation metrics. :@0.119279:0.708515:0.758293:0.708515:0.758293:0.692108:0.119279:0.692108:0.005478:0.008566:0.007567:0.008336:0.003964:0.003964:0.003554:0.004488:0.007993:0.008828:0.006551:0.006944:0.007567:0.009598:0.005480:0.008566:0.003554:0.004488:0.008336:0.009270:0.009647:0.004488:0.010335:0.011252:0.010138:0.006551:0.009639:0.012349:0.010138:0.004488:0.008336:0.005474:0.008566:0.004488:0.006944:0.009598:0.014102:0.008566:0.004488:0.009306:0.005126:0.004488:0.005552:0.009270:0.008566:0.004488:0.014102:0.009598:0.006944:0.005552:0.004488:0.007567:0.009598:0.014102:0.014102:0.009598:0.009270:0.003964:0.007927:0.004488:0.009270:0.006944:0.008566:0.009647:0.004488:0.008566:0.007554:0.008336:0.003964:0.009270:0.008336:0.005552:0.003964:0.009598:0.009270:0.004488:0.014102:0.008566:0.005552:0.005700:0.003964:0.007567:0.006944:0.003554:0.004488
• •:@0.094057:0.730627:0.094057:0.730627:0.094057:0.715166:0.094057:0.715166:0.004095:-0.011628:0.007534
  Comparison::@0.119285:0.731024:0.216124:0.731024:0.216124:0.714377:0.119285:0.714377:0.004520:-0.004520:0.010220:0.010007:0.015002:0.010002:0.008811:0.006584:0.004651:0.007206:0.010007:0.009909:0.004438
 Metrics enable the comparison of many models or algorithms to identify which one performs best :@0.216130:0.731024:0.945955:0.731024:0.945955:0.714617:0.216130:0.714617:0.005462:0.014708:0.008566:0.005552:0.005700:0.003964:0.007567:0.006944:0.005459:0.008566:0.009270:0.008336:0.009630:0.003964:0.008566:0.005457:0.005552:0.009270:0.008566:0.005457:0.007567:0.009598:0.014102:0.009416:0.008336:0.005700:0.003964:0.006944:0.009598:0.009270:0.005457:0.009301:0.005126:0.005460:0.014102:0.008336:0.009270:0.007927:0.005460:0.014102:0.009598:0.009647:0.008566:0.003964:0.006944:0.005470:0.009598:0.005700:0.005456:0.008336:0.003964:0.009647:0.009598:0.005700:0.003964:0.005552:0.009270:0.014102:0.006944:0.005462:0.005421:0.009598:0.005460:0.003964:0.009647:0.008566:0.009270:0.005552:0.003964:0.005390:0.007927:0.005460:0.011841:0.009270:0.003964:0.007567:0.009270:0.005454:0.009598:0.009270:0.008566:0.005459:0.009630:0.008566:0.006003:0.005126:0.009598:0.005660:0.014102:0.006944:0.005470:0.009630:0.008566:0.006944:0.005552:0.004488
for a given task. :@0.119286:0.749955:0.238360:0.749955:0.238360:0.733548:0.119286:0.733548:0.005126:0.009598:0.005700:0.004488:0.008336:0.004488:0.009647:0.003964:0.007737:0.008566:0.009270:0.004488:0.005552:0.008336:0.006944:0.008793:0.003554:0.004488
• •:@0.094064:0.772067:0.094064:0.772067:0.094064:0.756606:0.094064:0.756606:0.004095:-0.011628:0.007534
  Validation::@0.119285:0.772464:0.201418:0.772464:0.201418:0.755817:0.119285:0.755817:0.004520:-0.004520:0.009693:0.008811:0.004651:0.004651:0.010138:0.008811:0.006371:0.004651:0.010007:0.009909:0.004438
 During model construction, metrics are used to assess the model’s performance on distinct training and :@0.201439:0.772464:0.945938:0.772464:0.945938:0.756057:0.201439:0.756057:0.003783:0.011481:0.009270:0.005700:0.003964:0.009270:0.009647:0.003783:0.014102:0.009598:0.009647:0.008566:0.003964:0.003783:0.007567:0.009598:0.009270:0.006944:0.005552:0.005700:0.009270:0.007567:0.005552:0.003964:0.009598:0.009270:0.003554:0.003775:0.014102:0.008566:0.005552:0.005700:0.003964:0.007567:0.006944:0.003783:0.008336:0.005474:0.008566:0.003783:0.009270:0.006944:0.008566:0.009647:0.003783:0.005423:0.009598:0.003783:0.008336:0.006944:0.006944:0.008566:0.006944:0.006944:0.003803:0.005552:0.009270:0.008566:0.003783:0.014102:0.009598:0.009647:0.008566:0.003964:0.002819:0.006944:0.003793:0.009630:0.008566:0.006003:0.005126:0.009598:0.005660:0.014102:0.008336:0.009270:0.007567:0.008566:0.003783:0.009598:0.009270:0.003783:0.009647:0.003964:0.006944:0.005552:0.003964:0.009270:0.007567:0.005552:0.003783:0.005552:0.005700:0.008336:0.003964:0.009270:0.003964:0.009270:0.009647:0.003783:0.008336:0.009270:0.009647:0.004488
test sets to ensure that it generalises well to new data. :@0.119286:0.791395:0.513317:0.791395:0.513317:0.774988:0.119286:0.774988:0.005421:0.008566:0.006944:0.005552:0.004488:0.006944:0.008566:0.005552:0.006944:0.004488:0.005429:0.009598:0.004488:0.008566:0.009270:0.006944:0.009270:0.005478:0.008566:0.004488:0.005552:0.009270:0.008336:0.005552:0.004488:0.003964:0.005552:0.004488:0.009647:0.008566:0.009270:0.008566:0.005700:0.008336:0.003964:0.003964:0.006944:0.008566:0.006944:0.004488:0.011743:0.008566:0.003964:0.003964:0.004488:0.005426:0.009598:0.004488:0.009270:0.008566:0.011841:0.004488:0.009647:0.008336:0.005552:0.008336:0.003554:0.004488
• •:@0.094064:0.813507:0.094064:0.813507:0.094064:0.798046:0.094064:0.798046:0.004095:-0.011628:0.007534
Optimisation::@0.119286:0.813898:0.223926:0.813898:0.223926:0.797251:0.119286:0.797251:0.012415:0.010154:0.006371:0.004651:0.015002:0.004651:0.007206:0.008811:0.006371:0.004651:0.010007:0.009909:0.004438
 Metrics assist hyperparameter tuning and feature selection to optimise model performance. :@0.223959:0.813898:0.892998:0.813898:0.892998:0.797491:0.223959:0.797491:0.004488:0.014708:0.008566:0.005552:0.005700:0.003964:0.007567:0.006944:0.004488:0.008336:0.006944:0.006944:0.003964:0.006944:0.005552:0.004488:0.009270:0.007927:0.009630:0.008566:0.005700:0.009408:0.008336:0.005700:0.008336:0.014102:0.008566:0.005415:0.008566:0.005700:0.004488:0.005552:0.009270:0.009270:0.003964:0.009270:0.009647:0.004488:0.008336:0.009270:0.009647:0.004488:0.005126:0.008566:0.008336:0.005552:0.009270:0.005447:0.008566:0.004488:0.006944:0.008566:0.003964:0.008566:0.007567:0.005552:0.003964:0.009598:0.009270:0.004488:0.005423:0.009598:0.004488:0.009598:0.009630:0.005552:0.003964:0.014102:0.003964:0.006944:0.008566:0.004488:0.014102:0.009598:0.009647:0.008566:0.003964:0.004488:0.009630:0.008566:0.006014:0.005126:0.009598:0.005660:0.014102:0.008336:0.009270:0.007567:0.008566:0.003554:0.004488
There are various ways by which you can evaluate the metrics. Some commonly used ways to evaluate metrics are as :@0.086530:0.836401:0.945933:0.836401:0.945933:0.819994:0.086530:0.819994:0.008582:0.009270:0.008566:0.005475:0.008566:0.005438:0.008336:0.005475:0.008566:0.005438:0.007549:0.008336:0.005700:0.003964:0.009598:0.009270:0.006944:0.005438:0.011841:0.008336:0.007927:0.006944:0.005438:0.009630:0.007927:0.005438:0.011841:0.009270:0.003964:0.007567:0.009270:0.005438:0.007845:0.009598:0.009270:0.005438:0.007567:0.008336:0.009270:0.005438:0.008566:0.007549:0.008336:0.003964:0.009270:0.008336:0.005416:0.008566:0.005438:0.005552:0.009270:0.008566:0.005438:0.014102:0.008566:0.005552:0.005700:0.003964:0.007567:0.006944:0.003554:0.005438:0.008697:0.009598:0.014102:0.008566:0.005449:0.007567:0.009598:0.014102:0.014102:0.009598:0.009270:0.003964:0.007927:0.005449:0.009270:0.006944:0.008566:0.009647:0.005438:0.011841:0.008336:0.007927:0.006944:0.005438:0.005423:0.009598:0.005438:0.008566:0.007549:0.008336:0.003964:0.009270:0.008336:0.005418:0.008566:0.005438:0.014102:0.008566:0.005552:0.005700:0.003964:0.007567:0.006944:0.005438:0.008336:0.005474:0.008566:0.005438:0.008336:0.006944:0.004488
follows::@0.086530:0.855332:0.141118:0.855332:0.141118:0.838925:0.086530:0.838925:0.005126:0.009598:0.003964:0.003964:0.009598:0.011841:0.006944:0.003554
• •:@0.094064:0.877444:0.094064:0.877444:0.094064:0.861983:0.094064:0.861983:0.004095:-0.011628:0.007534
  Accuracy::@0.119285:0.877853:0.192872:0.877853:0.192872:0.861206:0.119285:0.861206:0.004520:-0.004520:0.011514:0.007862:0.007862:0.009909:0.006519:0.008811:0.007862:0.008811:0.004438
 This metric measures the proportion of correctly classified instances out of the total instances. In general, :@0.192874:0.877853:0.945969:0.877853:0.945969:0.861445:0.192874:0.861445:0.003765:0.008582:0.009270:0.003964:0.006944:0.003772:0.014102:0.008566:0.005552:0.005700:0.003964:0.007567:0.003765:0.014102:0.008566:0.008336:0.006944:0.009270:0.005482:0.008566:0.006944:0.003770:0.005552:0.009270:0.008566:0.003762:0.009630:0.005477:0.009598:0.009630:0.009598:0.006161:0.005552:0.003964:0.009598:0.009270:0.003764:0.009301:0.005126:0.003767:0.007567:0.009598:0.005700:0.005469:0.008566:0.007567:0.005552:0.003964:0.007927:0.003764:0.007567:0.003964:0.008336:0.006944:0.006944:0.003964:0.004545:0.004545:0.008566:0.009647:0.003769:0.003964:0.009270:0.006944:0.005552:0.008336:0.009270:0.007567:0.008566:0.006944:0.003769:0.009598:0.009270:0.005552:0.003762:0.009301:0.005126:0.003765:0.005552:0.009270:0.008566:0.003762:0.005421:0.009598:0.005552:0.008336:0.003964:0.003762:0.003964:0.009270:0.006944:0.005552:0.008336:0.009270:0.007567:0.008566:0.006944:0.003554:0.003765:0.004357:0.009270:0.003767:0.009647:0.008566:0.009270:0.008566:0.005700:0.008336:0.003964:0.003554:0.004488
an  accuracy  of  1.0  (100%)  indicates  perfect  classification,  meaning  that  all  instances  were  classified  correctly. :@0.119287:0.896784:0.945965:0.896784:0.945965:0.880377:0.119287:0.880377:0.008336:0.009270:0.004488:0.003310:0.008336:0.007567:0.007567:0.009270:0.005700:0.008336:0.007567:0.007927:0.004488:0.003299:0.009300:0.005126:0.004488:0.003315:0.008828:0.003554:0.008828:0.004488:0.003312:0.004946:0.008828:0.008828:0.008828:0.013397:0.004946:0.004488:0.003315:0.003964:0.009270:0.009647:0.003964:0.007567:0.008336:0.005420:0.008566:0.006944:0.004488:0.003317:0.009630:0.008566:0.006004:0.005126:0.008566:0.007567:0.005552:0.004488:0.003308:0.007567:0.003964:0.008336:0.006944:0.006944:0.003964:0.004545:0.004545:0.007567:0.008336:0.005552:0.003964:0.009598:0.009270:0.003554:0.004488:0.003312:0.014102:0.008566:0.008336:0.009270:0.003964:0.009270:0.009647:0.004488:0.003313:0.005552:0.009270:0.008336:0.005552:0.004488:0.003305:0.008336:0.003964:0.003964:0.004488:0.003317:0.003964:0.009270:0.006944:0.005552:0.008336:0.009270:0.007567:0.008566:0.006944:0.004488:0.003317:0.011756:0.008566:0.005477:0.008566:0.004488:0.003313:0.007567:0.003964:0.008336:0.006944:0.006944:0.003964:0.004545:0.004545:0.008566:0.009647:0.004488:0.003317:0.007567:0.009598:0.005700:0.005470:0.008566:0.007567:0.005552:0.003964:0.006908:0.003554:0.004488
Conversely, an accuracy of 0.0 (0%) indicates that none of the instances were classified correctly.:@0.119287:0.915715:0.808108:0.915715:0.808108:0.899308:0.119287:0.899308:0.010138:0.009598:0.009270:0.007749:0.008566:0.005806:0.006944:0.008566:0.003964:0.007116:0.003554:0.004488:0.008336:0.009270:0.004488:0.008336:0.007567:0.007567:0.009270:0.005700:0.008336:0.007567:0.007927:0.004488:0.009270:0.005126:0.004488:0.008828:0.003554:0.008828:0.004488:0.004946:0.008828:0.013397:0.004946:0.004488:0.003964:0.009270:0.009647:0.003964:0.007567:0.008336:0.005413:0.008566:0.006944:0.004488:0.005552:0.009270:0.008336:0.005552:0.004488:0.009270:0.009598:0.009270:0.008566:0.004488:0.009288:0.005126:0.004488:0.005552:0.009270:0.008566:0.004488:0.003964:0.009270:0.006944:0.005552:0.008336:0.009270:0.007567:0.008566:0.006944:0.004488:0.011750:0.008566:0.005477:0.008566:0.004488:0.007567:0.003964:0.008336:0.006944:0.006944:0.003964:0.004545:0.004545:0.008566:0.009647:0.004488:0.007567:0.009598:0.005700:0.005470:0.008566:0.007567:0.005552:0.003964:0.006908:0.003554